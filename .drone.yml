---
kind: pipeline
type: docker
name: default

steps:
  - name: setup
    image: node:18-alpine
    when:
      event:
        - push
    commands:
      - yarn install --frozen-lockfile
    volumes:
      - name: cache
        path: /root/.cache

  - name: lint
    image: node:18-alpine
    when:
      event:
        - push
      branch:
        exclude: [prod]
    depends_on:
      - setup
    commands:
      - yarn lint

  - name: types
    image: node:16-alpine
    when:
      event:
        - push
      branch:
        exclude: [prod]
    depends_on:
      - setup
    commands:
      - yarn types

  - name: build
    image: node:18-alpine
    when:
      event:
        - push
      branch:
        exclude: [prod]
    depends_on:
      - setup
    commands:
      - yarn build
      - yarn build:cli

  # - name: coverage
  #   image: node:18-alpine
  #   when:
  #     event:
  #       - push
  #   depends_on:
  #     - test
  #   commands:
  #     -
  #   environment:
  #     COVERALLS_REPO_TOKEN:
  #       from_secret: coveralls_token
  #     COVERALLS_SERVICE_NAME: drone
  #     COVERALLS_GIT_BRANCH: ${DRONE_BRANCH}
  #     COVERALLS_SERVICE_NUMBER: ${DRONE_BUILD_NUMBER}

  - name: server
    image: node:18-alpine
    detach: true
    when:
      event:
        - push
      branch:
        exclude: [prod]
    depends_on:
      - build
    commands:
      - yarn start
    environment:
      NODE_ENV: test
      MONGO_URL: mongodb://mongodb:27017/vote-test
      SMTP_URL: smtp://cypress:7777
      FROM_MAIL: testing.for@abakus.no
      REDIS_URL: redis
      HOST: 0.0.0.0

  - name: cypress
    image: cypress/base:18.15.0
    when:
      event:
        - push
      branch:
        exclude: [prod]
    depends_on:
      - build
    commands:
      - ./wait-for-it.sh server:3000 -t 30
      - yarn cypress run --record
    environment:
      BASE_URL: http://server:3000
      MONGO_URL: mongodb://mongodb:27017/vote-test
      NODE_ENV: test
      CYPRESS_RECORD_KEY:
        from_secret: cypress_record_key
    volumes:
      - name: cache
        path: /root/.cache

  - name: docker
    image: plugins/docker
    when:
      branch:
        - prod
      event: push
      status: success
    depends_on:
      - lint
      - types
      - cypress
      - build
    settings:
      repo: abakus/vote
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - version-${DRONE_COMMIT_SHA:0:7}
        - latest
      build_args:
        - RELEASE=version-${DRONE_COMMIT_SHA:0:7}

  - name: Deploy
    image: abakus/ansible-deploy
    when:
      branch:
        - prod
      event: push
      status: success
    depends_on:
      - docker
    settings:
      playbook: /infrastructure/esas/playbooks/deploy.yml
      repository:
        from_secret: infra_repository
      tags:
        - vote
      limit: esas
      extra_vars: vote_version=version-${DRONE_COMMIT_SHA:0:7}
      inventory: /infrastructure/inventory
      vault_password:
        from_secret: ansible_vault_password
      private_key:
        from_secret: infra_deploy_key

services:
  - name: mongodb
    image: mongo:4.4

  - name: redis
    image: redis:6.0

volumes:
  - name: cache
    temp: {}

---
kind: signature
hmac: 0aae33caf8b82ea0895715cb844b6c58dc67c3a3b0c909ada1035ecd941908aa
