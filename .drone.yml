---
kind: pipeline
type: docker
name: default

steps:
  - name: setup
    image: node:16-alpine
    when:
      event:
        - push
    commands:
      - yarn install --frozen-lockfile

  - name: lint
    image: node:16-alpine
    when:
      event:
        - push
    depends_on:
      - setup
    commands:
      - yarn lint

  - name: test
    image: node:16-alpine
    when:
      event:
        - push
    depends_on:
      - setup
    commands:
      - yarn coverage
    environment:
      MONGO_URL: mongodb://mongodb:27017/vote-test
      REDIS_URL: redis

  # - name: coverage
  #   image: node:16-alpine
  #   when:
  #     event:
  #       - push
  #   depends_on:
  #     - test
  #   commands:
  #     -
  #   environment:
  #     COVERALLS_REPO_TOKEN:
  #       from_secret: coveralls_token
  #     COVERALLS_SERVICE_NAME: drone
  #     COVERALLS_GIT_BRANCH: ${DRONE_BRANCH}
  #     COVERALLS_SERVICE_NUMBER: ${DRONE_BUILD_NUMBER}

  - name: build
    image: node:16-alpine
    when:
      event:
        - push
      branch:
        exclude: [prod]
    depends_on:
      - setup
    commands:
      - yarn build
      - yarn build:cli

  - name: protractor
    image: circleci/node:16-browsers
    # We run as root, because the docker daemon
    # no-new-priviliges flag
    # prohibits us from running sudo
    user: root
    when:
      event:
        - push
    depends_on:
      - build
    commands:
      # This image runs with a custom user (circleci)by default,
      # and chrome headless doesn't work for the root user.
      # --> Fix some file permissions before start
      - mkdir -p /root/.config/yarn/
      - chown -R circleci:circleci .
      - chown -R circleci:circleci /root/
      - su circleci
      - MONGO_URL=mongodb://mongodb:27017/vote-integration-test REDIS_URL=redis HEADLESS=true yarn protractor

  - name: docker
    image: plugins/docker
    when:
      branch:
        - prod
      event: push
      status: success
    depends_on:
      - lint
      - test
      - protractor
      - build
    settings:
      repo: abakus/vote
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - version-${DRONE_COMMIT_SHA:0:7}
        - latest
      build_args:
        - RELEASE=version-${DRONE_COMMIT_SHA:0:7}

  - name: Deploy
    image: abakus/ansible-deploy
    when:
      branch:
        - prod
      event: push
      status: success
    depends_on:
      - docker
    settings:
      playbook: /infrastructure/esas/playbooks/deploy.yml
      repository:
        from_secret: infra_repository
      tags:
        - vote
      limit: esas
      extra_vars: vote_version=version-${DRONE_COMMIT_SHA:0:7}
      inventory: /infrastructure/inventory
      vault_password:
        from_secret: ansible_vault_password
      private_key:
        from_secret: infra_deploy_key

services:
  - name: mongodb
    image: mongo:4.4

  - name: redis
    image: redis:6.0

---
kind: signature
hmac: 41115354b31bee4371da29a3f4af4204b5a405339af13d1e3b5acb8913ed0497
